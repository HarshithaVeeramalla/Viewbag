@model AguasNico.Models.ViewModels.Products.IndexViewModel
@using System.Globalization

@{
    ViewData["Title"] = "Productos";
}
    <link href="~/lib/datatables/media/css/dataTables.bootstrap4.css" rel="stylesheet">
    <script src="~/lib/datatables/datatables.min.js"></script>
    <script src="~/js/custom/products/index.js"></script>

<div class="container-fluid">
    <div class="row page-titles">
        <div class="col-md-5 col-8 align-self-center">
            <h3 class="text-themecolor m-b-0 m-t-0">Productos</h3>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Inicio</a></li>
                <li class="breadcrumb-item active">Productos </li>
            </ol>
        </div>
        <div class="col-md-7 col-4 align-self-center">
            <div class="d-flex m-t-10 justify-content-end">
                <div class="d-flex m-r-20 m-l-10">
                    <div>
                        <button class="btn btn-info waves-effect waves-light" data-toggle="modal" data-target="#modalConfirmation" onclick="createProduct()">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div id="modalConfirmation" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"
         style="display: none;">
        <div class="modal-dialog">
            <form method="post" id="form-product">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Product.ID)
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Editar producto</h4>
                        <button type="button" class="close" id="btnCloseModal" data-dismiss="modal" aria-hidden="true">×</button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-column">
                                    <div class="col-12 mb-3">
                                        <label asp-for="Product.Name" class="mb-0"></label>
                                        <input asp-for="Product.Name" class="form-control" required />
                                        <span asp-validation-for="Product.Name" class="text-danger"></span>
                                    </div>
                                    <div class="col-12 mb-3">
                                        <label asp-for="Product.Price" class="mb-0"></label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">$</span>
                                            </div>
                                            <input asp-for="Product.Price" class="form-control" required />
                                        </div>
                                        <span asp-validation-for="Product.Price" class="text-danger"></span>
                                    </div>
                                    <div class="col-12 mb-3">
                                        <label asp-for="Product.Type" class="mb-0"></label>
                                        @Html.DropDownListFor(x => x.Product.Type, Model.ProductTypes, new { @class = "form-control" })
                                        <span asp-validation-for="Product.Type" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div class="d-flex flex-row justify-content-between w-100">
                            <button type="button" id="btnDeleteProduct" class="btn btn-danger waves-effect waves-light">Eliminar</button>
                            <button type="button" id="btnSendModal" class="btn btn-success waves-effect waves-light">Guardar</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <!-- End Modal -->

    <div class="row">
        <div class="col-12">
            <div class="row">
                @foreach(Product product in Model.Products)
                {
                    <div class="col-lg-4 col-md-8 col-xlg-3 col-xs-12">
                        <div class="ribbon-wrapper card shadow">
                            <div class="ribbon ribbon-default ribbon-bookmark">@Html.DisplayFor(x => product.Name)</div>
                            <div class="my-2">
                                <p class="ribbon-content">Precio: @Html.DisplayFor(x => product.Price)</p>
                            </div>
                            <div class="d-flex flex-direction-row justify-content-between">
                                <button type="button" class="btn btn-outline-info btn-rounded mr-4 waves-effect waves-light" data-toggle="modal" data-target="#modalConfirmation" onclick='editProduct(@Json.Serialize(product))'>
                                    Editar <i class="bi bi-pencil"></i>
                                </button>
                                <a class="btn btn-info btn-rounded waves-effect waves-light" asp-area="" asp-controller="Stats" asp-action="Product" asp-route-itemid="@product.ID">
                                    Estadísticas <i class="bi bi-graph-up"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-12">
            <div class="card shadow">
                <div class="card-body">
                    <h2 class="card-title">Productos asociados a clientes</h2>
                    <div class="row">
                        <div class="form-group m-0 col-12 col-lg-6">
                            <select id="selectProduct" class="form-control" style="max-width: fit-content;">
                                <option value="" selected disabled>Seleccione un producto</option>
                                @foreach(Product product in Model.Products)
                                {
                                    <option value="@product.ID">@Html.DisplayFor(x => product.Name) - @Html.DisplayFor(x => product.Price)</option>
                                }
                            </select>
                        </div>
                        <div class="col-12 mt-3">
                            <table id="clientsTable" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>Cliente</th>
                                        <th>Dirección</th>
                                        <th>Reparto</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <form id="form-searchClients" method="get" asp-area="" asp-controller="Products" asp-action="GetClients">
        @Html.Hidden("productID", "")
    </form>
    <form id="form-deleteProduct" method="post" asp-area="" asp-controller="Products" asp-action="SoftDelete">
        @Html.AntiForgeryToken()
        @Html.Hidden("id", "")
    </form>
</div>

<script>
function editProduct(product) {
    $("#Product_ID").val(product.id);
    $("#Product_Name").val(product.name);
    $("#Product_Price").val(product.price);
    $("#Product_Type").val(product.type);
    $(".modal-title").text("Editar producto");
    $("#btnDeleteProduct").show();
    $("#form-product").attr("action", "/Products/Edit");
}

function createProduct() {
    $("#Product_ID").val("");
    $("#Product_Name").val("");
    $("#Product_Price").val("");
    $("#Product_Type").val("");
    $(".modal-title").text("Crear producto");
    $("#btnDeleteProduct").hide();
    $("#form-product").attr("action", "/Products/Create");
    }

$("#btnDeleteProduct").click(function () {
    Swal.fire({
        title: '¿Está seguro que desea eliminar el producto?',
        text: "Esta acción no se puede revertir",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#1e88e5',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Sí, eliminar',
        cancelButtonText: 'Cancelar'
    }).then((result) => {
        if (result.isConfirmed) {
            let form = $('#form-deleteProduct');
            $("#form-deleteProduct input[name='id']").val($("#Product_ID").val());
            $.ajax({
                url: $(form).attr('action'),
                method: $(form).attr('method'),
                data: $(form).serialize(),
                success: function (response) {
                    $("#btnCloseModal").click();
                    Swal.fire({
                        icon: 'success',
                        title: response.message,
                        confirmButtonColor: '#1e88e5',
                        allowOutsideClick: false,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.reload();
                        }
                    });
                },
                error: function (errorThrown) {
                    Swal.fire({
                        icon: 'error',
                        title: errorThrown.responseJSON.title,
                        text: errorThrown.responseJSON.message,
                        confirmButtonColor: '#1e88e5',
                    });
                }
            });
        }
    });
});

$("#btnSendModal").click(function () {
    let form = $('#form-product');
    $.ajax({
        url: $(form).attr('action'),
        method: $(form).attr('method'),
        data: $(form).serialize(),
        success: function (response) {
            $("#btnCloseModal").click();
            Swal.fire({
                icon: 'success',
                title: response.message,
                confirmButtonColor: '#1e88e5',
                allowOutsideClick: false,
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.reload();
                }
            });
        },
        error: function (errorThrown) {
            Swal.fire({
                icon: 'error',
                title: errorThrown.responseJSON.title,
                text: errorThrown.responseJSON.message,
                confirmButtonColor: '#1e88e5',
            });
        }
    });
});
</script>